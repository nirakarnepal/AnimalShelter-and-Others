%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 5 0 R /F5 6 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
6 0 obj
<<
/BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font
>>
endobj
7 0 obj
<<
/Contents 20 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 19 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
8 0 obj
<<
/Contents 21 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 19 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
9 0 obj
<<
/Outlines 11 0 R /PageLabels 22 0 R /PageMode /UseNone /Pages 19 0 R /Type /Catalog
>>
endobj
10 0 obj
<<
/Author () /CreationDate (D:20191112133624+00'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20191112133624+00'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title (Prime Threading) /Trapped /False
>>
endobj
11 0 obj
<<
/Count 9 /First 12 0 R /Last 12 0 R /Type /Outlines
>>
endobj
12 0 obj
<<
/Count 6 /Dest [ 7 0 R /XYZ 62.69291 689.0236 0 ] /First 13 0 R /Last 18 0 R /Parent 11 0 R /Title (Assignment Overview)
>>
endobj
13 0 obj
<<
/Count 4 /Dest [ 7 0 R /XYZ 62.69291 584.0236 0 ] /First 14 0 R /Last 17 0 R /Next 18 0 R /Parent 12 0 R 
  /Title (Full Credit)
>>
endobj
14 0 obj
<<
/Dest [ 7 0 R /XYZ 62.69291 380.0236 0 ] /Next 15 0 R /Parent 13 0 R /Title (Step 1)
>>
endobj
15 0 obj
<<
/Dest [ 8 0 R /XYZ 62.69291 765.0236 0 ] /Next 16 0 R /Parent 13 0 R /Prev 14 0 R /Title (Step 2)
>>
endobj
16 0 obj
<<
/Dest [ 8 0 R /XYZ 62.69291 684.0236 0 ] /Next 17 0 R /Parent 13 0 R /Prev 15 0 R /Title (Step 3)
>>
endobj
17 0 obj
<<
/Dest [ 8 0 R /XYZ 62.69291 387.0236 0 ] /Parent 13 0 R /Prev 16 0 R /Title (Step 4)
>>
endobj
18 0 obj
<<
/Dest [ 8 0 R /XYZ 62.69291 330.0236 0 ] /Parent 12 0 R /Prev 13 0 R /Title (Deliverables)
>>
endobj
19 0 obj
<<
/Count 2 /Kids [ 7 0 R 8 0 R ] /Type /Pages
>>
endobj
20 0 obj
<<
/Length 8305
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 156.0349 0 Td (Prime Threading) Tj T* -156.0349 0 Td ET
Q
Q
q
1 0 0 1 62.69291 719.0236 cm
q
BT 1 0 0 1 0 2 Tm 128.7949 0 Td 12 TL /F1 10 Tf 0 0 0 rg (CSE 1325 - Fall 2019 - Homework #13 \(Lab\) - 1) Tj T* -128.7949 0 Td ET
Q
Q
q
1 0 0 1 62.69291 701.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 132.9499 0 Td (Due Tuesday, November 12 at End of Lecture) Tj T* -132.9499 0 Td ET
Q
Q
q
1 0 0 1 62.69291 668.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Assignment Overview) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 638.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.170542 Tw (To date, we've been content to use only one of the processing cores in our machines. But those other) Tj T* 0 Tw (cores have become lonely! It's time to give them something useful to do.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 596.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 2.727045 Tw (You MAY use the example provided with Lecture 22, discussions with other students / SI / TAs /) Tj T* 0 Tw 1.868651 Tw (professor, Internet searches, or any other resource to complete this lab, EXCEPT to copy code from) Tj T* 0 Tw (another student!) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 566.0236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Full Credit) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 536.0236 cm
q
BT 1 0 0 1 0 14 Tm 3.471976 Tw 12 TL /F1 10 Tf 0 0 0 rg (Using your Linux-based development environment, and in your GitHub-managed working directory) Tj T* 0 Tw /F2 10 Tf (cse1325/P13/full_credit) Tj /F1 10 Tf (, expand the provided ZIP file. You'll find the following files:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 530.0236 cm
Q
q
1 0 0 1 62.69291 530.0236 cm
Q
q
1 0 0 1 62.69291 506.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 3.040751 Tw 12 TL /F2 10 Tf 0 0 0 rg (primes.cpp) Tj /F1 10 Tf ( - A non-threaded command line program \(no gtkmm\) that searches for all prime) Tj T* 0 Tw (numbers between two integers, inclusive. You will change ) Tj /F3 10 Tf (only one integer) Tj /F1 10 Tf ( in this file.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 500.0236 cm
Q
q
1 0 0 1 62.69291 476.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm -0.102515 Tw 12 TL /F2 10 Tf 0 0 0 rg (threads.cpp) Tj /F1 10 Tf ( - Identical to primes.cpp. This assignment is to add threading to this version to speed up) Tj T* 0 Tw (the search! ) Tj /F2 10 Tf (You will modify the code in this file) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 470.0236 cm
Q
q
1 0 0 1 62.69291 434.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 1.426647 Tw 12 TL /F2 10 Tf 0 0 0 rg (Makefile) Tj /F1 10 Tf ( - Builds primes.cpp \() Tj /F4 10 Tf 0 0 0 rg (make) Tj ( ) Tj (primes) Tj /F1 10 Tf 0 0 0 rg (\) and threads.cpp \() Tj /F4 10 Tf 0 0 0 rg (make) Tj ( ) Tj (threads) Tj /F1 10 Tf 0 0 0 rg (\), and times their) Tj T* 0 Tw .523984 Tw (execution \() Tj /F4 10 Tf 0 0 0 rg (make) Tj ( ) Tj (timep) Tj /F1 10 Tf 0 0 0 rg ( and ) Tj /F4 10 Tf 0 0 0 rg (make) Tj ( ) Tj (timet) Tj /F1 10 Tf 0 0 0 rg (, respectively\). You may, but do ) Tj /F2 10 Tf (not) Tj /F1 10 Tf ( need to, modify this) Tj T* 0 Tw (file.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 428.0236 cm
Q
q
1 0 0 1 62.69291 392.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .361163 Tw 12 TL /F2 10 Tf 0 0 0 rg (results.txt) Tj /F1 10 Tf ( - You will document the runtimes for primes.cpp and for threads.cpp with 2, 4, 8, 16, and) Tj T* 0 Tw 1.187318 Tw (32 threads ) Tj /F3 10 Tf (on your machine) Tj /F1 10 Tf (. This, plus changes to threads.cpp, will determine your grade for this) Tj T* 0 Tw (assignment.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 392.0236 cm
Q
q
1 0 0 1 62.69291 365.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F5 12.5 Tf 0 0 0 rg (Step 1) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 335.0236 cm
q
BT 1 0 0 1 0 14 Tm .931751 Tw 12 TL /F1 10 Tf 0 0 0 rg (Compile and time the execution of primes.cpp ) Tj /F3 10 Tf (on your machine) Tj /F1 10 Tf ( using ) Tj /F4 10 Tf 0 0 0 rg (make) Tj ( ) Tj (timep) Tj /F1 10 Tf 0 0 0 rg ( \(the trailing p is for) Tj T* 0 Tw (primes.cpp\). The list of primes found will be in the file primes.txt, if you'd like to verify correct operation.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 317.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The command line parameters for primes are) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 311.0236 cm
Q
q
1 0 0 1 62.69291 311.0236 cm
Q
q
1 0 0 1 62.69291 299.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (1.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the number of threads \(default 1\), which is ignored in this version, and) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 293.0236 cm
Q
q
1 0 0 1 62.69291 269.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 5.66 0 Td (2.) Tj T* -5.66 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.37152 Tw (the maximum integer \(default 10,000,000\) to search for prime numbers \(the main function always) Tj T* 0 Tw (starts searching at 2, though class Prime_numbers is more flexible\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 269.0236 cm
Q
q
1 0 0 1 62.69291 239.0236 cm
q
BT 1 0 0 1 0 14 Tm 1.30311 Tw 12 TL /F1 10 Tf 0 0 0 rg (The parameters may be passed directly to primes, e.g., ) Tj /F4 10 Tf 0 0 0 rg (primes) Tj ( ) Tj (1) Tj ( ) Tj (100000) Tj /F1 10 Tf 0 0 0 rg (, or via the Makefile, e.g.,) Tj T* 0 Tw /F4 10 Tf 0 0 0 rg (make) Tj ( ) Tj (timep) Tj ( ) Tj (1) Tj ( ) Tj (100000) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 221.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The output of the time command offers 3 times:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 215.0236 cm
Q
q
1 0 0 1 62.69291 215.0236 cm
Q
q
1 0 0 1 62.69291 191.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm -0.019535 Tw 12 TL /F2 10 Tf 0 0 0 rg (real) Tj /F1 10 Tf ( - This is the "wall time", that is, how long it took the program to run as experienced by the human) Tj T* 0 Tw (at the console \(that's you!\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 185.0236 cm
Q
q
1 0 0 1 62.69291 173.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (user) Tj /F1 10 Tf ( - This is the total time spent by all cores in "user" mode, running your application code.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 167.0236 cm
Q
q
1 0 0 1 62.69291 143.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.955542 Tw 12 TL /F2 10 Tf 0 0 0 rg (sys) Tj /F1 10 Tf ( - This is the total time spent by all cores in "system" mode, running kernel calls from your) Tj T* 0 Tw (application code.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 143.0236 cm
Q
q
1 0 0 1 62.69291 113.0236 cm
q
BT 1 0 0 1 0 14 Tm .29881 Tw 12 TL /F1 10 Tf 0 0 0 rg (So the time as experienced by the computer \(equivalent to the "system load"\) is ) Tj /F2 10 Tf (user+sys) Tj /F1 10 Tf (, while the time) Tj T* 0 Tw (experienced by the user is ) Tj /F2 10 Tf (real) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 83.02362 cm
q
BT 1 0 0 1 0 14 Tm .759431 Tw 12 TL /F2 10 Tf 0 0 0 rg (Adjust the value of max_int in the main function of primes.cpp until it runs in between 20 and 30) Tj T* 0 Tw (seconds on your machine.) Tj /F1 10 Tf ( Record this number in results.txt.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 83.02362 cm
Q
 
endstream
endobj
21 0 obj
<<
/Length 5513
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 750.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F5 12.5 Tf 0 0 0 rg (Step 2) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 696.0236 cm
q
BT 1 0 0 1 0 38 Tm 2.095318 Tw 12 TL /F2 10 Tf 0 0 0 rg (Edit max_int in threads.cpp to match the value you selected in Step 1.) Tj /F1 10 Tf ( Verify \(almost\) identical) Tj T* 0 Tw 2.010574 Tw (execution time using ) Tj /F4 10 Tf 0 0 0 rg (make) Tj ( ) Tj (timet) Tj /F1 10 Tf 0 0 0 rg ( \(the trailing t is for threads.cpp\). The list of primes found by this) Tj T* 0 Tw 11.32248 Tw (program will be in the file primes_threads.txt, and you can verify them using) Tj T* 0 Tw /F4 10 Tf 0 0 0 rg (diff) Tj ( ) Tj (primes.txt) Tj ( ) Tj (primes_threads.txt) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 669.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F5 12.5 Tf 0 0 0 rg (Step 3) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 639.0236 cm
q
BT 1 0 0 1 0 14 Tm 7.576647 Tw 12 TL /F2 10 Tf 0 0 0 rg (Modify threads.cpp to search for the prime numbers using two or more threads.) Tj /F1 10 Tf  T* 0 Tw /F4 10 Tf 0 0 0 rg (git) Tj ( ) Tj (add) Tj ( ) Tj (-u) Tj ( ) Tj (;) Tj ( ) Tj (git) Tj ( ) Tj (commit) Tj /F1 10 Tf 0 0 0 rg ( often!) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 633.0236 cm
Q
q
1 0 0 1 62.69291 633.0236 cm
Q
q
1 0 0 1 62.69291 621.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (All of your changes will be to class Prime_numbers.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 615.0236 cm
Q
q
1 0 0 1 62.69291 567.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 38 Tm .903059 Tw 12 TL /F1 10 Tf 0 0 0 rg (You will need to refactor method ) Tj /F2 10 Tf (find_primes) Tj /F1 10 Tf (, which currently searchs linearly for primes between) Tj T* 0 Tw .003828 Tw (lower and upper, into two methods: ) Tj /F2 10 Tf (find_primes_thread) Tj /F1 10 Tf (, which performs the same search but ) Tj /F3 10 Tf (safely) Tj /F1 10 Tf  T* 0 Tw -0.050016 Tw (updating the primes vector \(HINT: You'll need a new class attribute for this!\), and ) Tj /F2 10 Tf (find_primes,) Tj /F1 10 Tf ( which) Tj T* 0 Tw (in the new version just creates and manages threads running find_primes_thread.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 561.0236 cm
Q
q
1 0 0 1 62.69291 525.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .243735 Tw (The number of integers to be searched per thread is simply the difference between upper and lower,) Tj T* 0 Tw .278555 Tw (divided by the number of threads specified as the constructor parameter. Each thread should search) Tj T* 0 Tw (a DIFFERENT range of integers, obviously.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 519.0236 cm
Q
q
1 0 0 1 62.69291 495.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.388488 Tw (The default number of threads is set to 4, but this can be changed in your code and via the first) Tj T* 0 Tw (parameter on the command line in threads.cpp.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 495.0236 cm
Q
q
1 0 0 1 62.69291 465.0236 cm
q
BT 1 0 0 1 0 14 Tm 3.226654 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can compile and run the program using ) Tj /F4 10 Tf 0 0 0 rg (make) Tj ( ) Tj (timet) Tj /F1 10 Tf 0 0 0 rg (. The list of primes will be in the file) Tj T* 0 Tw (primes_threads.txt.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 399.0236 cm
q
BT 1 0 0 1 0 50 Tm .570574 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can determine if the order of primes found in primes_threads.txt is different from the order of primes) Tj T* 0 Tw .371797 Tw (found by the non-threaded version in primes.txt using ) Tj /F4 10 Tf 0 0 0 rg (diff) Tj ( ) Tj (primes.txt) Tj ( ) Tj (primes_threads.txt) Tj /F1 10 Tf 0 0 0 rg (. You) Tj T* 0 Tw 2.236235 Tw (can verify that both threaded and untreaded programs found the ) Tj /F3 10 Tf (same) Tj /F1 10 Tf ( prime numbers, even if in a) Tj T* 0 Tw 2.076647 Tw (different order, using ) Tj /F4 10 Tf 0 0 0 rg (sort) Tj ( ) Tj (-n) Tj ( ) Tj (primes_threads.txt) Tj ( ) Tj (|) Tj ( ) Tj (diff) Tj ( ) Tj (primes.txt) Tj ( ) Tj (-) Tj /F1 10 Tf 0 0 0 rg ( \(note the trailing) Tj T* 0 Tw (dash\).) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 372.0236 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F5 12.5 Tf 0 0 0 rg (Step 4) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 342.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .015318 Tw (Time your threaded version of threads.cpp running each different number of threads as listed in results.txt,) Tj T* 0 Tw (recording your time results in results.txt. Answer the questions in results.txt as well.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 312.0236 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Deliverables) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 282.0236 cm
q
BT 1 0 0 1 0 14 Tm 2.113059 Tw 12 TL /F1 10 Tf 0 0 0 rg (Ensure that you have committed ) Tj /F3 10 Tf (and pushed) Tj /F1 10 Tf ( \(at least\) ) Tj /F2 10 Tf (primes.cpp) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (threads.cpp) Tj /F1 10 Tf (, and ) Tj /F2 10 Tf (results.txt) Tj /F1 10 Tf ( to) Tj T* 0 Tw (GitHub before you leave class today.) Tj T* ET
Q
Q
 
endstream
endobj
22 0 obj
<<
/Nums [ 0 23 0 R 1 24 0 R ]
>>
endobj
23 0 obj
<<
/S /D /St 1
>>
endobj
24 0 obj
<<
/S /D /St 2
>>
endobj
xref
0 25
0000000000 65535 f 
0000000073 00000 n 
0000000144 00000 n 
0000000251 00000 n 
0000000363 00000 n 
0000000478 00000 n 
0000000583 00000 n 
0000000702 00000 n 
0000000907 00000 n 
0000001112 00000 n 
0000001217 00000 n 
0000001490 00000 n 
0000001564 00000 n 
0000001707 00000 n 
0000001858 00000 n 
0000001965 00000 n 
0000002085 00000 n 
0000002205 00000 n 
0000002312 00000 n 
0000002425 00000 n 
0000002491 00000 n 
0000010848 00000 n 
0000016413 00000 n 
0000016463 00000 n 
0000016497 00000 n 
trailer
<<
/ID 
[<3edf34f4f256e1434e256135fb4785eb><3edf34f4f256e1434e256135fb4785eb>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 10 0 R
/Root 9 0 R
/Size 25
>>
startxref
16531
%%EOF
